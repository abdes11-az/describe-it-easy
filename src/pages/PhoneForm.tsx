import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { ChevronRight } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Card } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Checkbox } from "@/components/ui/checkbox";

const PhoneForm = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    // ุงููุณู ุงูุฃูู: ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ
    phoneName: "",
    color: "",
    condition: "",
    usageDuration: "",
    
    // ุงููุณู ุงูุซุงูู: ุงูุชูุงุตูู ุงูุชูููุฉ
    storage: "",
    ram: "",
    screenType: "",
    operatingSystem: "",
    batteryCapacity: "",
    normalBatteryLife: "",
    gamingBatteryLife: "",
    iphoneBatteryPercentage: "",
    fingerprintWorks: "",
    waterResistant: "",
    networkCondition: "",
    
    // ุงููุณู ุงูุซุงูุซ: ุงูุชุนุฏููุงุช
    modifications: "",
    
    // ุงููุณู ุงูุฑุงุจุน: ุงูููุญูุงุช
    originalBox: "",
    originalCharger: "",
    additionalAccessories: [] as string[],
    
    // ุงููุณู ุงูุฎุงูุณ: ูุนูููุงุช ุงูุจุงุฆุน
    city: "",
    sellerType: "",
    deliveryMethod: "",
    price: "",
    negotiable: "",
    contactMethod: "",
    warranty: "",
    warrantyDuration: "",
    acceptExchange: "",
    reasonForSale: "",
    inspectionTimes: "",
    unwantedCustomers: [] as string[],
    additionalNotes: ""
  });

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    navigate("/result", { state: { formData, category: "phones" } });
  };

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleMultiSelectChange = (field: string, value: string, checked: boolean) => {
    setFormData(prev => ({
      ...prev,
      [field]: checked 
        ? [...(prev[field as keyof typeof prev] as string[]), value]
        : (prev[field as keyof typeof prev] as string[]).filter(item => item !== value)
    }));
  };

  const accessoriesOptions = [
    "ุฌุฑุงุจ", "ูุงูู ุงูุดุงุดุฉ", "ุณูุงุนุงุช", "ูุงุจู ุงูุดุญู", "ุฑุฃุณ ุงูุดุงุญู", 
    "ุดุงุญู ูุงุณููู", "ุจุงูุฑ ุจุงูู", "ุดุงุญู ุณูุงุฑุฉ", "ุญุงูู ูุงุชู", 
    "ุณูุงุนุฉ ุจููุชูุซ", "ูุงุฑุช ุฐุงูุฑุฉ", "ุฃุฏูุงุช ุชูุธูู"
  ];

  const unwantedCustomersOptions = [
    "ุจุฏูู ูุณุทุงุก", "ุงูุณุนุฑ ููุงุฆู", "ุฌุงุฏูู ููุท", "ูุง ูููุจุงุฏูุฉ", "ุงุณุชูุณุงุฑ ูุงุญุฏ ููุท"
  ];

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center gap-4">
        <Button 
          variant="ghost" 
          size="sm" 
          onClick={() => navigate("/create")}
          className="h-10 w-10 p-0"
        >
          <ChevronRight className="h-5 w-5" />
        </Button>
        
        <div className="flex-1 text-right">
          <h2 className="text-xl font-bold text-foreground">
            ๐ฑ ููุงุชู
          </h2>
          <p className="text-sm text-muted">
            ุฃุฏุฎู ุจูุงูุงุช ุงููุงุชู ูุฅูุดุงุก ุงููุตู
          </p>
        </div>
      </div>

      {/* Form */}
      <form onSubmit={handleSubmit} className="space-y-6">
          
          {/* ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ */}
          <Card className="p-6 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-950/30 dark:to-blue-900/20 border-blue-200 dark:border-blue-800">
            <div className="flex items-center gap-3 mb-4">
              <div className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">1</div>
              <h3 className="text-lg font-semibold text-blue-700 dark:text-blue-300">ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ</h3>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="phoneName">ุงุณู ุงููุงุชู</Label>
                <Input
                  id="phoneName"
                  value={formData.phoneName}
                  onChange={(e) => handleInputChange("phoneName", e.target.value)}
                  placeholder="ูุซุงู: iPhone 15 Pro Max"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="color">ุงูููู</Label>
                <Input
                  id="color"
                  value={formData.color}
                  onChange={(e) => handleInputChange("color", e.target.value)}
                  placeholder="ูุซุงู: ุฃุฒุฑูุ ุฃุณูุฏุ ุฐูุจู"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="condition">ุงูุญุงูุฉ</Label>
                <Select value={formData.condition} onValueChange={(value) => handleInputChange("condition", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="new">ุฌุฏูุฏ</SelectItem>
                    <SelectItem value="used">ูุณุชุนูู</SelectItem>
                    <SelectItem value="refurbished">ูุฌุฏุฏ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="usageDuration">ูุฏุฉ ุงูุงุณุชุฎุฏุงู</Label>
                <Input
                  id="usageDuration"
                  value={formData.usageDuration}
                  onChange={(e) => handleInputChange("usageDuration", e.target.value)}
                  placeholder="ูุซุงู: 6 ุฃุดูุฑุ ุณูุฉ ูุงุญุฏุฉ"
                  className="text-right"
                />
              </div>
            </div>
          </Card>

          {/* ุงูุชูุงุตูู ุงูุชูููุฉ */}
          <Card className="p-6 bg-gradient-to-br from-green-50 to-green-100 dark:from-green-950/30 dark:to-green-900/20 border-green-200 dark:border-green-800">
            <div className="flex items-center gap-3 mb-4">
              <div className="w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center text-sm font-bold">2</div>
              <h3 className="text-lg font-semibold text-green-700 dark:text-green-300">ุงูุชูุงุตูู ุงูุชูููุฉ</h3>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="storage">ุงูุชุฎุฒูู</Label>
                <Input
                  id="storage"
                  value={formData.storage}
                  onChange={(e) => handleInputChange("storage", e.target.value)}
                  placeholder="ูุซุงู: 128GBุ 256GBุ 512GB"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="ram">ุงูุฐุงูุฑุฉ ุงูุนุดูุงุฆูุฉ RAM</Label>
                <Input
                  id="ram"
                  value={formData.ram}
                  onChange={(e) => handleInputChange("ram", e.target.value)}
                  placeholder="ูุซุงู: 6GBุ 8GBุ 12GB"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="screenType">ููุน ุงูุดุงุดุฉ</Label>
                <Select value={formData.screenType} onValueChange={(value) => handleInputChange("screenType", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ููุน ุงูุดุงุดุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="oled">OLED</SelectItem>
                    <SelectItem value="amoled">AMOLED</SelectItem>
                    <SelectItem value="super-amoled">Super AMOLED</SelectItem>
                    <SelectItem value="lcd">LCD</SelectItem>
                    <SelectItem value="ips">IPS</SelectItem>
                    <SelectItem value="retina">Retina</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="operatingSystem">ูุธุงู ุงูุชุดุบูู</Label>
                <Input
                  id="operatingSystem"
                  value={formData.operatingSystem}
                  onChange={(e) => handleInputChange("operatingSystem", e.target.value)}
                  placeholder="ูุซุงู: iOS 17ุ Android 14"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="batteryCapacity">ุณุนุฉ ุงูุจุทุงุฑูุฉ</Label>
                <Input
                  id="batteryCapacity"
                  value={formData.batteryCapacity}
                  onChange={(e) => handleInputChange("batteryCapacity", e.target.value)}
                  placeholder="ูุซุงู: 4000mAhุ 5000mAh"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="normalBatteryLife">ุนูุฑ ุงูุจุทุงุฑูุฉ ุงูุนุงุฏู</Label>
                <Input
                  id="normalBatteryLife"
                  value={formData.normalBatteryLife}
                  onChange={(e) => handleInputChange("normalBatteryLife", e.target.value)}
                  placeholder="ูุซุงู: ููู ูุงููุ 8 ุณุงุนุงุช"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="gamingBatteryLife">ุนูุฑ ุงูุจุทุงุฑูุฉ ูู ุงูุฃูุนุงุจ</Label>
                <Input
                  id="gamingBatteryLife"
                  value={formData.gamingBatteryLife}
                  onChange={(e) => handleInputChange("gamingBatteryLife", e.target.value)}
                  placeholder="ูุซุงู: 4 ุณุงุนุงุชุ 6 ุณุงุนุงุช"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="iphoneBatteryPercentage">ูุณุจุฉ ุงูุจุทุงุฑูุฉ ููุขูููู</Label>
                <Input
                  id="iphoneBatteryPercentage"
                  value={formData.iphoneBatteryPercentage}
                  onChange={(e) => handleInputChange("iphoneBatteryPercentage", e.target.value)}
                  placeholder="ูุซุงู: 95%ุ 88%"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="fingerprintWorks">ุจุตูุฉ ุงูุฅุตุจุน ุชุนูู</Label>
                <Select value={formData.fingerprintWorks} onValueChange={(value) => handleInputChange("fingerprintWorks", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="none">ูุง ููุฌุฏ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="waterResistant">ููุงูู ูููุงุก</Label>
                <Select value={formData.waterResistant} onValueChange={(value) => handleInputChange("waterResistant", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="partial">ุฌุฒุฆูุงู</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="networkCondition">ุญุงูุฉ ุงูุดุจูุฉ</Label>
                <Select value={formData.networkCondition} onValueChange={(value) => handleInputChange("networkCondition", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุญุงูุฉ ุงูุดุจูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="excellent">ููุชุงุฒุฉ</SelectItem>
                    <SelectItem value="good">ุฌูุฏุฉ</SelectItem>
                    <SelectItem value="weak">ุถุนููุฉ</SelectItem>
                    <SelectItem value="not-working">ูุง ุชุนูู</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </Card>

          {/* ุงูุชุนุฏููุงุช */}
          <Card className="p-6 bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-950/30 dark:to-purple-900/20 border-purple-200 dark:border-purple-800">
            <div className="flex items-center gap-3 mb-4">
              <div className="w-8 h-8 bg-purple-500 text-white rounded-full flex items-center justify-center text-sm font-bold">3</div>
              <h3 className="text-lg font-semibold text-purple-700 dark:text-purple-300">ุงูุชุนุฏููุงุช</h3>
            </div>
            
            <div className="space-y-2">
              <Label htmlFor="modifications">ุงูุชุนุฏููุงุช</Label>
              <Textarea
                id="modifications"
                value={formData.modifications}
                onChange={(e) => handleInputChange("modifications", e.target.value)}
                placeholder="ุงุฐูุฑ ุฃู ุชุนุฏููุงุช ุชู ุฅุฌุฑุงุคูุง ุนูู ุงููุงุชู"
                rows={3}
                className="text-right resize-none"
              />
            </div>
          </Card>

          {/* ุงูููุญูุงุช */}
          <Card className="p-6 bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-950/30 dark:to-orange-900/20 border-orange-200 dark:border-orange-800">
            <div className="flex items-center gap-3 mb-4">
              <div className="w-8 h-8 bg-orange-500 text-white rounded-full flex items-center justify-center text-sm font-bold">4</div>
              <h3 className="text-lg font-semibold text-orange-700 dark:text-orange-300">ุงูููุญูุงุช</h3>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="originalBox">ุงูุนูุจุฉ ุงูุฃุตููุฉ</Label>
                <Select value={formData.originalBox} onValueChange={(value) => handleInputChange("originalBox", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="available">ูุชููุฑุฉ</SelectItem>
                    <SelectItem value="not-available">ุบูุฑ ูุชููุฑุฉ</SelectItem>
                    <SelectItem value="damaged">ุชุงููุฉ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="originalCharger">ุงูุดุงุญู ุงูุฃุตูู</Label>
                <Select value={formData.originalCharger} onValueChange={(value) => handleInputChange("originalCharger", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="available">ูุชููุฑ</SelectItem>
                    <SelectItem value="not-available">ุบูุฑ ูุชููุฑ</SelectItem>
                    <SelectItem value="damaged">ุชุงูู</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="space-y-2">
              <Label>ููุญูุงุช ุฅุถุงููุฉ</Label>
              <div className="grid grid-cols-2 md:grid-cols-3 gap-2">
                {accessoriesOptions.map((accessory) => (
                  <div key={accessory} className="flex items-center space-x-2 space-x-reverse">
                    <Checkbox
                      id={`accessory-${accessory}`}
                      checked={formData.additionalAccessories.includes(accessory)}
                      onCheckedChange={(checked) => 
                        handleMultiSelectChange("additionalAccessories", accessory, checked as boolean)
                      }
                    />
                    <Label htmlFor={`accessory-${accessory}`} className="text-sm">
                      {accessory}
                    </Label>
                  </div>
                ))}
              </div>
            </div>
          </Card>

          {/* ูุนูููุงุช ุงูุจุงุฆุน */}
          <Card className="p-6 bg-gradient-to-br from-red-50 to-red-100 dark:from-red-950/30 dark:to-red-900/20 border-red-200 dark:border-red-800">
            <div className="flex items-center gap-3 mb-4">
              <div className="w-8 h-8 bg-red-500 text-white rounded-full flex items-center justify-center text-sm font-bold">5</div>
              <h3 className="text-lg font-semibold text-red-700 dark:text-red-300">ูุนูููุงุช ุงูุจุงุฆุน</h3>
            </div>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="city">ุงููุฏููุฉ</Label>
                <Input
                  id="city"
                  value={formData.city}
                  onChange={(e) => handleInputChange("city", e.target.value)}
                  placeholder="ูุซุงู: ุงูุฑูุงุถุ ุฌุฏุฉุ ุงูุฏูุงู"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="sellerType">ููุน ุงูุจุงุฆุน</Label>
                <Select value={formData.sellerType} onValueChange={(value) => handleInputChange("sellerType", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ููุน ุงูุจุงุฆุน" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="person">ุดุฎุต</SelectItem>
                    <SelectItem value="shop">ูุญู</SelectItem>
                    <SelectItem value="company">ุดุฑูุฉ</SelectItem>
                    <SelectItem value="broker">ูุณูุท</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="deliveryMethod">ุทุฑููุฉ ุงูุชูุตูู</Label>
                <Select value={formData.deliveryMethod} onValueChange={(value) => handleInputChange("deliveryMethod", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุทุฑููุฉ ุงูุชูุตูู" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="pickup">ุงุณุชูุงู ุดุฎุตู</SelectItem>
                    <SelectItem value="delivery">ุชูุตูู</SelectItem>
                    <SelectItem value="shipping">ุดุญู</SelectItem>
                    <SelectItem value="both">ููุงููุง</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="price">ุงูุณุนุฑ</Label>
                <Input
                  id="price"
                  value={formData.price}
                  onChange={(e) => handleInputChange("price", e.target.value)}
                  placeholder="ุฃุฏุฎู ุงูุณุนุฑ"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="negotiable">ูุงุจู ููุชูุงูุถ</Label>
                <Select value={formData.negotiable} onValueChange={(value) => handleInputChange("negotiable", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="reasonable">ุถูู ุญุฏูุฏ ูุนูููุฉ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="contactMethod">ุทุฑููุฉ ุงูุชูุงุตู</Label>
                <Input
                  id="contactMethod"
                  value={formData.contactMethod}
                  onChange={(e) => handleInputChange("contactMethod", e.target.value)}
                  placeholder="ุฃุฏุฎู ุทุฑููุฉ ุงูุชูุงุตู ุงูููุถูุฉ"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="warranty">ุงูุถูุงู</Label>
                <Select value={formData.warranty} onValueChange={(value) => handleInputChange("warranty", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุญุงูุฉ ุงูุถูุงู" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="available">ูุชููุฑ</SelectItem>
                    <SelectItem value="not-available">ุบูุฑ ูุชููุฑ</SelectItem>
                    <SelectItem value="expired">ููุชูู</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              {formData.warranty === "available" && (
                <div className="space-y-2">
                  <Label htmlFor="warrantyDuration">ูุฏุฉ ุงูุถูุงู</Label>
                  <Input
                    id="warrantyDuration"
                    value={formData.warrantyDuration}
                    onChange={(e) => handleInputChange("warrantyDuration", e.target.value)}
                    placeholder="ูุซุงู: 6 ุฃุดูุฑุ ุณูุฉ ูุงุญุฏุฉ"
                    className="text-right"
                  />
                </div>
              )}

              <div className="space-y-2">
                <Label htmlFor="acceptExchange">ูุจูู ุงูุชุจุงุฏู</Label>
                <Select value={formData.acceptExchange} onValueChange={(value) => handleInputChange("acceptExchange", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ ุงูุญุงูุฉ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="depends">ุญุณุจ ุงูููุน</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="reasonForSale">ุณุจุจ ุงูุจูุน</Label>
                <Input
                  id="reasonForSale"
                  value={formData.reasonForSale}
                  onChange={(e) => handleInputChange("reasonForSale", e.target.value)}
                  placeholder="ูุซุงู: ุชุฑููุฉ ููุงุชู ุฃุญุฏุซ"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="inspectionTimes">ุฃููุงุช ุงููุนุงููุฉ</Label>
                <Input
                  id="inspectionTimes"
                  value={formData.inspectionTimes}
                  onChange={(e) => handleInputChange("inspectionTimes", e.target.value)}
                  placeholder="ูุซุงู: ูู ุฃู ููุชุ ุฃููุงุช ุงูุนูู ููุท"
                  className="text-right"
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label>ุงูุนููุงุก ุบูุฑ ุงููุฑุบูุจูู</Label>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-2">
                {unwantedCustomersOptions.map((option) => (
                  <div key={option} className="flex items-center space-x-2 space-x-reverse">
                    <Checkbox
                      id={`unwanted-${option}`}
                      checked={formData.unwantedCustomers.includes(option)}
                      onCheckedChange={(checked) => 
                        handleMultiSelectChange("unwantedCustomers", option, checked as boolean)
                      }
                    />
                    <Label htmlFor={`unwanted-${option}`} className="text-sm">
                      {option}
                    </Label>
                  </div>
                ))}
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="additionalNotes">ููุงุญุธุงุช ุฅุถุงููุฉ</Label>
              <Textarea
                id="additionalNotes"
                value={formData.additionalNotes}
                onChange={(e) => handleInputChange("additionalNotes", e.target.value)}
                placeholder="ุฃุถู ุฃู ููุงุญุธุงุช ุฅุถุงููุฉ ููุง"
                rows={4}
                className="text-right resize-none"
              />
            </div>
          </Card>

        <Button
          type="submit" 
          className="w-full h-12 text-base font-medium"
        >
          ุฅูุดุงุก ุงููุตู
        </Button>
      </form>
    </div>
  );
};

export default PhoneForm;