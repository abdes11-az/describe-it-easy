import { useState } from "react";
import { useNavigate } from "react-router-dom";
import { ChevronRight } from "lucide-react";
import { Button } from "@/components/ui/button";
import { Input } from "@/components/ui/input";
import { Textarea } from "@/components/ui/textarea";
import { Label } from "@/components/ui/label";
import { Card } from "@/components/ui/card";
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select";
import { Checkbox } from "@/components/ui/checkbox";

const CarForm = () => {
  const navigate = useNavigate();
  const [formData, setFormData] = useState({
    // ุงููุณู ุงูุฃูู: ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ
    city: "",
    brand: "",
    model: "",
    year: "",
    fuelType: "",
    enginePower: "",
    transmission: "",
    fuelConsumption: "",
    doors: "",
    condition: "",
    
    // ุงููุณู ุงูุซุงูู: ุชูุงุตูู ุงูุงุณุชุฎุฏุงู
    firstUse: "",
    allServicesAvailable: "",
    firstUseInCountry: "",
    kilometers: "",
    color: "",
    accident: "",
    painting: "",
    
    // ุงููุณู ุงูุซุงูุซ: ุงูุชุนุฏููุงุช
    modifications: "",
    
    // ุงููุณู ุงูุฑุงุจุน: ุงูุชูุงุตูู ุงูุชูููุฉ
    engineType: "",
    steering: "",
    airbags: "",
    airConditioning: "",
    
    // ุงููุณู ุงูุฎุงูุณ: ุญุงูุฉ ุงูุณูุงุฑุฉ
    wheelsType: "",
    glassType: "",
    interiorType: "",
    speakersType: "",
    
    // ุงููุณู ุงูุณุงุฏุณ: ุงูุนููุงุก ุบูุฑ ุงููุฑุบูุจูู
    unwantedCustomers: "",
    
    // ุงููุณู ุงูุณุงุจุน: ุงูุชุฌููุฒุงุช ุงูุฅุถุงููุฉ
    features: [] as string[],
    
    // ุงููุณู ุงูุซุงูู: ูุนูููุงุช ุงููุงูู
    ownerType: "",
    usageDuration: "",
    ownershipType: "",
    papersReady: "",
    taxAmount: "",
    insuranceAmount: "",
    phone: "",
    price: "",
    negotiable: "",
    reasonForSale: "",
    viewingTimes: "",
    additionalNotes: ""
  });

  const carBrands = [
    "ุฏุงุณูุง โ Dacia", "ุฑููู โ Renault", "ููููุฏุงู โ Hyundai", "ุจูุฌู โ Peugeot",
    "ููููุณ ูุงุบู โ Volkswagen", "ุชูููุชุง โ Toyota", "ููุง โ Kia", "ุณูุชุฑููู โ Citroรซn",
    "ููุงุช โ Fiat", "ููุฑุฏ โ Ford", "ุฃูุจู โ Opel", "ุณููุฏุง โ Skoda",
    "ููุณุงู โ Nissan", "ุดููุฑูููู โ Chevrolet", "ูุฑุณูุฏุณ โ Mercedes-Benz", "ุจู ุฅู ุฏุจููู โ BMW",
    "ุฃูุฏู โ Audi", "ูุงูุฏ ุฑููุฑ โ Land Rover", "ุฌูุจ โ Jeep", "ููููู โ Volvo",
    "ุจูุฑุดู โ Porsche", "ุฌุงุฌูุงุฑ โ Jaguar", "ุชุณูุง โ Tesla", "ุจู ูุงู ุฏู โ BYD",
    "ุฅู ุฌู โ MG", "ูุงูุงู โ Great Wall / Haval", "ุฌููู โ Geely", "ููู ููุชูุฑุฒ โ Neo Motors"
  ];

  const carFeatures = [
    "CD/MP3/Bluetooth ๐ต", "ุฑุงุฏุงุฑ ุฎููู ๐ก", "ูุงููุฑุง ุฎูููุฉ ๐ท", "ูุธุงู ุงูููุงุญุฉ GPS ๐บ๏ธ",
    "ููุงุนุฏ ุฌูุฏูุฉ ๐ช", "ุชูููู โ๏ธ", "ูุซุจุช ุงูุณุฑุนุฉ โก", "ูุชุญุฉ ุณูู โ๏ธ",
    "ุฃุถูุงุก ุถุจุงุจ ๐ก", "ุนุฌูุงุช ุงูุฃูููููู โ๏ธ", "ููุงูุฐ ููุฑุจุงุฆูุฉ ๐", "ููู ูุฑูุฒู ๐",
    "ูุธุงู ุฅูุฐุงุฑ ๐จ", "ุญุณุงุณุงุช ุงูุฑูู ๐ถ", "ููุงุนุฏ ูุฏูุฃุฉ ๐ฅ", "ุฏุฎูู ุจุฏูู ููุชุงุญ ๐๏ธ"
  ];

  const handleSubmit = (e: React.FormEvent) => {
    e.preventDefault();
    navigate("/result", { state: { formData, category: "cars" } });
  };

  const handleInputChange = (field: string, value: string) => {
    setFormData(prev => ({ ...prev, [field]: value }));
  };

  const handleFeatureChange = (feature: string, checked: boolean) => {
    setFormData(prev => ({
      ...prev,
      features: checked 
        ? [...prev.features, feature]
        : prev.features.filter(f => f !== feature)
    }));
  };

  return (
    <div className="space-y-6">
      {/* Header */}
      <div className="flex items-center gap-4">
        <Button 
          variant="ghost" 
          size="sm" 
          onClick={() => navigate("/create")}
          className="h-10 w-10 p-0"
        >
          <ChevronRight className="h-5 w-5" />
        </Button>
        
        <div className="flex-1 text-right">
          <h2 className="text-xl font-bold text-foreground">
            ๐ ุณูุงุฑุงุช
          </h2>
          <p className="text-sm text-muted">
            ุฃุฏุฎู ุจูุงูุงุช ุงูุณูุงุฑุฉ ูุฅูุดุงุก ุงููุตู
          </p>
        </div>
      </div>

      {/* Form */}
      <form onSubmit={handleSubmit} className="space-y-6">
        
        {/* ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ */}
        <Card className="p-6 bg-gradient-to-br from-blue-50 to-blue-100 dark:from-blue-950/30 dark:to-blue-900/20 border-blue-200 dark:border-blue-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-bold">1</div>
            <h3 className="text-lg font-semibold text-blue-700 dark:text-blue-300">ุงููุนูููุงุช ุงูุฃุณุงุณูุฉ</h3>
          </div>
          <div className="space-y-4">
            <div className="space-y-2">
              <Label htmlFor="city">ุงููุฏููุฉ</Label>
              <Input
                id="city"
                value={formData.city}
                onChange={(e) => handleInputChange("city", e.target.value)}
                placeholder="ุฃุฏุฎู ุงููุฏููุฉ"
                className="text-right"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="brand">ููุน ุงูุณูุงุฑุฉ</Label>
              <Select value={formData.brand} onValueChange={(value) => handleInputChange("brand", value)}>
                <SelectTrigger className="text-right">
                  <SelectValue placeholder="ุงุฎุชุฑ ููุน ุงูุณูุงุฑุฉ" />
                </SelectTrigger>
                <SelectContent>
                  {carBrands.map((brand) => (
                    <SelectItem key={brand} value={brand}>{brand}</SelectItem>
                  ))}
                </SelectContent>
              </Select>
            </div>

            <div className="space-y-2">
              <Label htmlFor="model">ุงูููุฏูู</Label>
              <Input
                id="model"
                value={formData.model}
                onChange={(e) => handleInputChange("model", e.target.value)}
                placeholder="ุฃุฏุฎู ุงูููุฏูู"
                className="text-right"
              />
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="year">ุณูุฉ ุงูุตูุน</Label>
                <Input
                  id="year"
                  value={formData.year}
                  onChange={(e) => handleInputChange("year", e.target.value)}
                  placeholder="2024"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="fuelType">ููุน ุงููููุฏ</Label>
                <Input
                  id="fuelType"
                  value={formData.fuelType}
                  onChange={(e) => handleInputChange("fuelType", e.target.value)}
                  placeholder="ุจูุฒููุ ุฏูุฒูุ ูุฌูู"
                  className="text-right"
                />
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="enginePower">ููุฉ ุงููุญุฑู</Label>
              <Input
                id="enginePower"
                value={formData.enginePower}
                onChange={(e) => handleInputChange("enginePower", e.target.value)}
                placeholder="1.6Lุ 2.0L"
                className="text-right"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="transmission">ูุงูู ุงูุญุฑูุฉ</Label>
              <Select value={formData.transmission} onValueChange={(value) => handleInputChange("transmission", value)}>
                <SelectTrigger className="text-right">
                  <SelectValue placeholder="ุงุฎุชุฑ ูุงูู ุงูุญุฑูุฉ" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="manual">ูุฏูู</SelectItem>
                  <SelectItem value="automatic">ุงุชููุงุชููู</SelectItem>
                  <SelectItem value="cvt">CVT</SelectItem>
                </SelectContent>
              </Select>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="fuelConsumption">ุงุณุชููุงู ุงููููุฏ</Label>
                <Input
                  id="fuelConsumption"
                  value={formData.fuelConsumption}
                  onChange={(e) => handleInputChange("fuelConsumption", e.target.value)}
                  placeholder="6L/100km"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="doors">ุนุฏุฏ ุงูุฃุจูุงุจ</Label>
                <Select value={formData.doors} onValueChange={(value) => handleInputChange("doors", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุนุฏุฏ ุงูุฃุจูุงุจ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="2">2 ุฃุจูุงุจ</SelectItem>
                    <SelectItem value="3">3 ุฃุจูุงุจ</SelectItem>
                    <SelectItem value="4">4 ุฃุจูุงุจ</SelectItem>
                    <SelectItem value="5">5 ุฃุจูุงุจ</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="condition">ุญุงูุฉ ุงูุณูุงุฑุฉ</Label>
              <Input
                id="condition"
                value={formData.condition}
                onChange={(e) => handleInputChange("condition", e.target.value)}
                placeholder="ููุชุงุฒุฉุ ุฌูุฏุฉุ ูุชูุณุทุฉ"
                className="text-right"
              />
            </div>
          </div>
        </Card>

        {/* ุชูุงุตูู ุงูุงุณุชุฎุฏุงู */}
        <Card className="p-6 bg-gradient-to-br from-green-50 to-green-100 dark:from-green-950/30 dark:to-green-900/20 border-green-200 dark:border-green-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-green-500 text-white rounded-full flex items-center justify-center text-sm font-bold">2</div>
            <h3 className="text-lg font-semibold text-green-700 dark:text-green-300">ุชูุงุตูู ุงูุงุณุชุฎุฏุงู</h3>
          </div>
          <div className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label>ุงูุงุณุชุฎุฏุงู ุงูุฃูู</Label>
                <Select value={formData.firstUse} onValueChange={(value) => handleInputChange("firstUse", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label>ุฌููุน ุงูุฎุฏูุงุช ูุชููุฑุฉ</Label>
                <Select value={formData.allServicesAvailable} onValueChange={(value) => handleInputChange("allServicesAvailable", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="firstUseInCountry">ุงูุงุณุชุฎุฏุงู ุงูุฃูู ูู ุงูุจูุฏ</Label>
              <Input
                id="firstUseInCountry"
                value={formData.firstUseInCountry}
                onChange={(e) => handleInputChange("firstUseInCountry", e.target.value)}
                placeholder="ุชุงุฑูุฎ ุงูุงุณุชุฎุฏุงู ุงูุฃูู"
                className="text-right"
              />
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="kilometers">ุนุฏุฏ ุงููููููุชุฑุงุช</Label>
                <Input
                  id="kilometers"
                  value={formData.kilometers}
                  onChange={(e) => handleInputChange("kilometers", e.target.value)}
                  placeholder="50,000 ูู"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="color">ุงูููู</Label>
                <Input
                  id="color"
                  value={formData.color}
                  onChange={(e) => handleInputChange("color", e.target.value)}
                  placeholder="ุฃุจูุถุ ุฃุณูุฏุ ูุถู"
                  className="text-right"
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label>ุชุนุฑุถุช ูุญุงุฏุซ</Label>
                <Select value={formData.accident} onValueChange={(value) => handleInputChange("accident", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="minor">ุญุงุฏุซ ุจุณูุท</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label>ุงูุตุจุงุบุฉ ุฃุตููุฉ</Label>
                <Select value={formData.painting} onValueChange={(value) => handleInputChange("painting", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="original">ุฃุตููุฉ ุจุงููุงูู</SelectItem>
                    <SelectItem value="partial">ุตุจุงุบุฉ ุฌุฒุฆูุฉ</SelectItem>
                    <SelectItem value="full">ุตุจุงุบุฉ ูุงููุฉ</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </div>
        </Card>

        {/* ุงูุชุนุฏููุงุช */}
        <Card className="p-6 bg-gradient-to-br from-purple-50 to-purple-100 dark:from-purple-950/30 dark:to-purple-900/20 border-purple-200 dark:border-purple-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-purple-500 text-white rounded-full flex items-center justify-center text-sm font-bold">3</div>
            <h3 className="text-lg font-semibold text-purple-700 dark:text-purple-300">ุงูุชุนุฏููุงุช</h3>
          </div>
          <div className="space-y-2">
            <Label htmlFor="modifications">ุงูุชุนุฏููุงุช</Label>
            <Textarea
              id="modifications"
              value={formData.modifications}
              onChange={(e) => handleInputChange("modifications", e.target.value)}
              placeholder="ุงุฐูุฑ ุฃู ุชุนุฏููุงุช ุฃู ุชุญุณููุงุช ุชู ุฅุฌุฑุงุคูุง"
              rows={3}
              className="text-right resize-none"
            />
          </div>
        </Card>

        {/* ุงูุชูุงุตูู ุงูุชูููุฉ */}
        <Card className="p-6 bg-gradient-to-br from-orange-50 to-orange-100 dark:from-orange-950/30 dark:to-orange-900/20 border-orange-200 dark:border-orange-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-orange-500 text-white rounded-full flex items-center justify-center text-sm font-bold">4</div>
            <h3 className="text-lg font-semibold text-orange-700 dark:text-orange-300">ุงูุชูุงุตูู ุงูุชูููุฉ</h3>
          </div>
          <div className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="engineType">ููุน ุงููุญุฑู</Label>
                <Input
                  id="engineType"
                  value={formData.engineType}
                  onChange={(e) => handleInputChange("engineType", e.target.value)}
                  placeholder="ุชูุงุตูู ุงููุญุฑู"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="steering">ุงููููุฏ</Label>
                <Input
                  id="steering"
                  value={formData.steering}
                  onChange={(e) => handleInputChange("steering", e.target.value)}
                  placeholder="ููุน ุงููููุฏ"
                  className="text-right"
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label>ุงููุณุงุฆุฏ ุงูููุงุฆูุฉ</Label>
                <Select value={formData.airbags} onValueChange={(value) => handleInputChange("airbags", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="available">ูุชููุฑุฉ</SelectItem>
                    <SelectItem value="partial">ุฌุฒุฆูุฉ</SelectItem>
                    <SelectItem value="not_available">ุบูุฑ ูุชููุฑุฉ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label>ุงูุชูููู</Label>
                <Select value={formData.airConditioning} onValueChange={(value) => handleInputChange("airConditioning", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="efficient">ูุนูู ุจููุงุกุฉ</SelectItem>
                    <SelectItem value="needs_maintenance">ูุญุชุงุฌ ุตูุงูุฉ</SelectItem>
                    <SelectItem value="not_working">ูุง ูุนูู</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>
          </div>
        </Card>

        {/* ุญุงูุฉ ุงูุณูุงุฑุฉ */}
        <Card className="p-6 bg-gradient-to-br from-red-50 to-red-100 dark:from-red-950/30 dark:to-red-900/20 border-red-200 dark:border-red-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-red-500 text-white rounded-full flex items-center justify-center text-sm font-bold">5</div>
            <h3 className="text-lg font-semibold text-red-700 dark:text-red-300">ุญุงูุฉ ุงูุณูุงุฑุฉ</h3>
          </div>
          <div className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="wheelsType">ููุน ุงูุนุฌูุงุช</Label>
                <Input
                  id="wheelsType"
                  value={formData.wheelsType}
                  onChange={(e) => handleInputChange("wheelsType", e.target.value)}
                  placeholder="ุฃููููููุ ุญุฏูุฏ"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="glassType">ููุน ุงูุฒุฌุงุฌ</Label>
                <Input
                  id="glassType"
                  value={formData.glassType}
                  onChange={(e) => handleInputChange("glassType", e.target.value)}
                  placeholder="ุฃุตููุ ููุบูููุฑ"
                  className="text-right"
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="interiorType">ููุน ุงูุตุงููู</Label>
                <Input
                  id="interiorType"
                  value={formData.interiorType}
                  onChange={(e) => handleInputChange("interiorType", e.target.value)}
                  placeholder="ุฌูุฏุ ููุงุด"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="speakersType">ููุน ุงูุณูุงุนุงุช</Label>
                <Input
                  id="speakersType"
                  value={formData.speakersType}
                  onChange={(e) => handleInputChange("speakersType", e.target.value)}
                  placeholder="ุฃุตููุฉุ ููุญุณูููุฉ"
                  className="text-right"
                />
              </div>
            </div>
          </div>
        </Card>

        {/* ุงูุนููุงุก ุบูุฑ ุงููุฑุบูุจูู */}
        <Card className="p-6 bg-gradient-to-br from-yellow-50 to-yellow-100 dark:from-yellow-950/30 dark:to-yellow-900/20 border-yellow-200 dark:border-yellow-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-yellow-500 text-white rounded-full flex items-center justify-center text-sm font-bold">6</div>
            <h3 className="text-lg font-semibold text-yellow-700 dark:text-yellow-300">ุงูุนููุงุก ุบูุฑ ุงููุฑุบูุจูู</h3>
          </div>
          <div className="space-y-2">
            <Label htmlFor="unwantedCustomers">ุงูุนููุงุก ุบูุฑ ุงููุฑุบูุจูู</Label>
            <Textarea
              id="unwantedCustomers"
              value={formData.unwantedCustomers}
              onChange={(e) => handleInputChange("unwantedCustomers", e.target.value)}
              placeholder="ุญุฏุฏ ููุน ุงูุนููุงุก ุบูุฑ ุงููุฑุบูุจ ูููู"
              rows={2}
              className="text-right resize-none"
            />
          </div>
        </Card>

        {/* ุงูุชุฌููุฒุงุช ุงูุฅุถุงููุฉ */}
        <Card className="p-6 bg-gradient-to-br from-emerald-50 to-emerald-100 dark:from-emerald-950/30 dark:to-emerald-900/20 border-emerald-200 dark:border-emerald-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-emerald-500 text-white rounded-full flex items-center justify-center text-sm font-bold">7</div>
            <h3 className="text-lg font-semibold text-emerald-700 dark:text-emerald-300">ุงูุชุฌููุฒุงุช ุงูุฅุถุงููุฉ</h3>
          </div>
          <div className="grid grid-cols-1 gap-3">
            {carFeatures.map((feature) => (
              <div key={feature} className="flex items-center space-x-2 space-x-reverse">
                <Checkbox
                  id={feature}
                  checked={formData.features.includes(feature)}
                  onCheckedChange={(checked) => handleFeatureChange(feature, checked as boolean)}
                />
                <Label htmlFor={feature} className="text-sm">{feature}</Label>
              </div>
            ))}
          </div>
        </Card>

        {/* ูุนูููุงุช ุงููุงูู */}
        <Card className="p-6 bg-gradient-to-br from-indigo-50 to-indigo-100 dark:from-indigo-950/30 dark:to-indigo-900/20 border-indigo-200 dark:border-indigo-800">
          <div className="flex items-center gap-3 mb-4">
            <div className="w-8 h-8 bg-indigo-500 text-white rounded-full flex items-center justify-center text-sm font-bold">8</div>
            <h3 className="text-lg font-semibold text-indigo-700 dark:text-indigo-300">ูุนูููุงุช ุงููุงูู</h3>
          </div>
          <div className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label>ููุน ุงููุงูู</Label>
                <Select value={formData.ownerType} onValueChange={(value) => handleInputChange("ownerType", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="man">ุฑุฌู</SelectItem>
                    <SelectItem value="woman">ุงูุฑุฃุฉ</SelectItem>
                    <SelectItem value="broker">ูุณูุท</SelectItem>
                    <SelectItem value="dealer">ุจุงุฆุน ุงูุณูุงุฑุงุช</SelectItem>
                    <SelectItem value="company">ุดุฑูุฉ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label htmlFor="usageDuration">ูุฏุฉ ุงูุงุณุชุฎุฏุงู</Label>
                <Input
                  id="usageDuration"
                  value={formData.usageDuration}
                  onChange={(e) => handleInputChange("usageDuration", e.target.value)}
                  placeholder="3 ุณููุงุช"
                  className="text-right"
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="ownershipType">ููุน ุงูููููุฉ</Label>
                <Input
                  id="ownershipType"
                  value={formData.ownershipType}
                  onChange={(e) => handleInputChange("ownershipType", e.target.value)}
                  placeholder="ุดุฎุตูุฉุ ุชุฌุงุฑูุฉ"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label>ุงูุฃูุฑุงู ุฌุงูุฒุฉ</Label>
                <Select value={formData.papersReady} onValueChange={(value) => handleInputChange("papersReady", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="partial">ุฌุฒุฆูุงู</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="taxAmount">ูุจูุบ ุงูุถุฑูุจุฉ</Label>
                <Input
                  id="taxAmount"
                  value={formData.taxAmount}
                  onChange={(e) => handleInputChange("taxAmount", e.target.value)}
                  placeholder="ุฃุฏุฎู ูุจูุบ ุงูุถุฑูุจุฉ"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="insuranceAmount">ูุจูุบ ุงูุชุฃููู</Label>
                <Input
                  id="insuranceAmount"
                  value={formData.insuranceAmount}
                  onChange={(e) => handleInputChange("insuranceAmount", e.target.value)}
                  placeholder="ุฃุฏุฎู ูุจูุบ ุงูุชุฃููู"
                  className="text-right"
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label htmlFor="phone">ุฑูู ุงููุงุชู</Label>
                <Input
                  id="phone"
                  value={formData.phone}
                  onChange={(e) => handleInputChange("phone", e.target.value)}
                  placeholder="ุฃุฏุฎู ุฑูู ุงููุงุชู"
                  className="text-right"
                />
              </div>

              <div className="space-y-2">
                <Label htmlFor="price">ุงูุณุนุฑ</Label>
                <Input
                  id="price"
                  value={formData.price}
                  onChange={(e) => handleInputChange("price", e.target.value)}
                  placeholder="ุฃุฏุฎู ุงูุณุนุฑ"
                  className="text-right"
                />
              </div>
            </div>

            <div className="grid grid-cols-2 gap-4">
              <div className="space-y-2">
                <Label>ูุงุจู ููุชูุงูุถ</Label>
                <Select value={formData.negotiable} onValueChange={(value) => handleInputChange("negotiable", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="yes">ูุนู</SelectItem>
                    <SelectItem value="no">ูุง</SelectItem>
                    <SelectItem value="reasonable">ุถูู ุญุฏูุฏ ูุนูููุฉ</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div className="space-y-2">
                <Label>ุฃููุงุช ุงููุนุงููุฉ</Label>
                <Select value={formData.viewingTimes} onValueChange={(value) => handleInputChange("viewingTimes", value)}>
                  <SelectTrigger className="text-right">
                    <SelectValue placeholder="ุงุฎุชุฑ" />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="anytime">ูู ุฃู ููุช</SelectItem>
                    <SelectItem value="work_hours">ุฃููุงุช ุงูุนูู ููุท</SelectItem>
                    <SelectItem value="weekends">ุนุทูุฉ ููุงูุฉ ุงูุฃุณุจูุน</SelectItem>
                    <SelectItem value="appointment">ุจุงูุงุชูุงู ุงููุณุจู</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div className="space-y-2">
              <Label htmlFor="reasonForSale">ุณุจุจ ุงูุจูุน</Label>
              <Input
                id="reasonForSale"
                value={formData.reasonForSale}
                onChange={(e) => handleInputChange("reasonForSale", e.target.value)}
                placeholder="ุชุบููุฑ ุงูุณูุงุฑุฉุ ุงูุณูุฑุ ุฅูุฎ"
                className="text-right"
              />
            </div>

            <div className="space-y-2">
              <Label htmlFor="additionalNotes">ููุงุญุธุงุช ุฅุถุงููุฉ</Label>
              <Textarea
                id="additionalNotes"
                value={formData.additionalNotes}
                onChange={(e) => handleInputChange("additionalNotes", e.target.value)}
                placeholder="ุฃู ูุนูููุงุช ุฅุถุงููุฉ ูููุฉ"
                rows={4}
                className="text-right resize-none"
              />
            </div>
          </div>
        </Card>

        <Button 
          type="submit" 
          className="w-full h-12 text-base font-medium"
        >
          ุฅูุดุงุก ุงููุตู
        </Button>
      </form>
    </div>
  );
};

export default CarForm;